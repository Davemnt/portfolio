# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

#resend
.env.local

#seccion contacto opcion 1
// "use client";

// import React, { useState, useEffect } from 'react';
// import { FaGithub, FaLinkedin } from 'react-icons/fa';
// import { motion } from "framer-motion"; 

// const ContactSection = () => {
//   const [copied, setCopied] = useState(false);
//   const [displayedEmail, setDisplayedEmail] = useState('');

//   const emailParts = ['monte.david', '@', 'outlook', '.com'];
//   const githubUrl = "https://github.com/Davemnt";
//   const linkedinUrl = "https://www.linkedin.com/in/david-monte-a9ba567b/";

//   useEffect(() => {
//     setDisplayedEmail(emailParts.join(''));
//   }, []);

//   const handleCopyEmail = () => {
//     if (displayedEmail) {
//       navigator.clipboard.writeText(displayedEmail);
//       setCopied(true);
//       setTimeout(() => setCopied(false), 2000);
//     }
//   };

//   return (
//     <motion.section
//       id="contacto"
//       className="py-16 md:py-24 bg-gray-100"
//       initial={{ opacity: 0, y: 50 }}
//       whileInView={{ opacity: 1, y: 0 }}
//       viewport={{ once: true, amount: 0.3 }}
//       transition={{ duration: 0.8, ease: "easeOut" }}
//     >
//       <div className="container mx-auto px-4 max-w-6xl">
//         <h2 className="text-4xl font-extrabold text-[#1c1c1c] text-center mb-12">
//           Ponte en <span className="text-transparent bg-clip-text bg-gradient-to-r from-orange-800 to-orange-600">Contacto</span>
//         </h2>

//         <div className="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
         
//           <motion.div
//             className="flex justify-center md:justify-end"
//             initial={{ opacity: 0, x: -50 }} // Animación para la imagen de contacto
//             whileInView={{ opacity: 1, x: 0 }}
//             viewport={{ once: true, amount: 0.5 }}
//             transition={{ duration: 0.8, ease: "easeOut" }}
//           >
//             <div className="w-64 h-64 md:w-80 md:h-80 rounded-full overflow-hidden shadow-xl">
//               <img
//                 src="/images/correo.png"
//                 alt="Contáctame"
//                 className="w-full h-full object-cover rounded-full"
//               />
//             </div>
//           </motion.div>

          
//           <motion.div
//             className="text-center md:text-left"
//             initial={{ opacity: 0, x: 50 }} // Animación para el texto de contacto
//             whileInView={{ opacity: 1, x: 0 }}
//             viewport={{ once: true, amount: 0.5 }}
//             transition={{ duration: 0.8, delay: 0.2, ease: "easeOut" }}
//           >
//             <p className="text-[#323946] text-lg leading-relaxed mb-6">
//               ¡Me encantaría saber de ti! Ya sea para proyectos, colaboraciones o simplemente para saludar, no dudes en enviarme un mensaje.
//             </p>

//             <div className="mb-8">
//               <p className="text-2xl font-bold text-[#1c1c1c] mb-2">Email:</p>
//               <div className="flex flex-col sm:flex-row items-center justify-center md:justify-start gap-4">
//                 <span className="text-[#323946] text-xl font-medium break-all">
//                   {displayedEmail || 'Cargando email...'}
//                 </span>
//                 <button
//                   onClick={handleCopyEmail}
//                   className="px-5 py-2 bg-orange-600 text-white rounded-md text-base font-medium hover:bg-orange-700 transition duration-300 relative"
//                 >
//                   {copied ? (
//                     <span className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-green-500 text-white text-xs px-2 py-1 rounded-full whitespace-nowrap">¡Copiado!</span>
//                   ) : (
//                     "Copiar Email"
//                   )}
//                 </button>
//               </div>
//             </div>

//             <div>
//               <h3 className="text-2xl font-bold text-[#1c1c1c] mb-4">Encuéntrame en:</h3>
//               <div className="flex justify-center md:justify-start space-x-6">
//                 <a
//                   href={githubUrl}
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="text-[#323946] hover:text-orange-600 transition duration-300"
//                   aria-label="GitHub"
//                 >
//                   <FaGithub className="h-10 w-10" />
//                 </a>
//                 <a
//                   href={linkedinUrl}
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="text-[#323946] hover:text-orange-600 transition duration-300"
//                   aria-label="LinkedIn"
//                 >
//                   <FaLinkedin className="h-10 w-10" />
//                 </a>
//               </div>
//             </div>
//           </motion.div>
//         </div>
//       </div>
//     </motion.section>
//   );
// };

// export default ContactSection;





#   Seccion Contacto original

"use client";

import React, { useState, useRef } from 'react';

import { motion } from "framer-motion";
import { sendEmail } from '@/app/actions';

const ContactSection = () => {
  const [status, setStatus] = useState(null);
  const formRef = useRef(null);

  

  const handleFormSubmit = async (formData) => {
    setStatus({ type: 'info', message: 'Enviando...' });
    const result = await sendEmail(formData);
    if (result.error) {
      setStatus({ type: 'error', message: result.error });
    } else {
      setStatus({ type: 'success', message: result.success });
      formRef.current?.reset();
    }
  };

  return (
    <motion.section
      id="contacto"
      className="py-20 sm:py-24 md:py-32 bg-slate-100"
      initial={{ opacity: 0, y: 50 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true, amount: 0.2 }}
      transition={{ duration: 0.8, ease: "easeOut" }}
    >
      <div className="container mx-auto px-4 max-w-6xl">
        {/* --- Título y subtítulo con tipografía responsiva --- */}
        <div className="text-center mb-12 md:mb-16">
          <h2 className="text-3xl sm:text-4xl lg:text-5xl font-extrabold text-slate-800">
            Ponte en <span className="text-transparent bg-clip-text bg-gradient-to-r from-orange-600 to-amber-600">Contacto</span>
          </h2>
          <p className="text-slate-600 text-base sm:text-lg leading-relaxed mt-4 max-w-3xl mx-auto">
            ¡Me encantaría saber de ti! Ya sea para proyectos, colaboraciones o simplemente para saludar, no dudes en enviarme un mensaje.
          </p>
        </div>

        {/* --- Estructura principal de dos columnas --- */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 items-center">
          
          {/* --- COLUMNA IZQUIERDA: IMAGEN --- */}
          <motion.div
            className="flex justify-center" // Centra la imagen en su columna
            initial={{ opacity: 0, x: -50 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true, amount: 0.5 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
          >
            {/* Contenedor de imagen con tamaño responsivo */}
            <div className="overflow-hidden">
              <img
                src="/images/mail.png"
                alt="Contáctame"
                className="w-full h-full object-cover rounded-full"
              />
            </div>
          </motion.div>

          {/* --- COLUMNA DERECHA: FORMULARIO --- */}
          <motion.div
            initial={{ opacity: 0, x: 50 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true, amount: 0.5 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
          >
            {/* Formulario con padding responsivo */}
            <form ref={formRef} action={handleFormSubmit} className="bg-white p-6 sm:p-8 rounded-lg shadow-xl w-full">
              <div className="mb-5">
                <label htmlFor="name" className="block text-slate-700 font-medium mb-2">Nombre</label>
                <input type="text" id="name" name="name" required className="w-full px-4 py-3 border border-slate-300 rounded-md focus:ring-orange-500 focus:border-orange-500 transition"/>
              </div>
              <div className="mb-5">
                <label htmlFor="email" className="block text-slate-700 font-medium mb-2">Mail</label>
                <input type="email" id="email" name="email" required className="w-full px-4 py-3 border border-slate-300 rounded-md focus:ring-orange-500 focus:border-orange-500 transition"/>
              </div>
              <div className="mb-6">
                <label htmlFor="message" className="block text-slate-700 font-medium mb-2">Mensaje</label>
                <textarea id="message" name="message" rows="5" required className="w-full px-4 py-3 border border-slate-300 rounded-md focus:ring-orange-500 focus:border-orange-500 transition"></textarea>
              </div>
              <div className="text-center">
                <button type="submit" className="w-full px-8 py-3 bg-orange-600 text-white rounded-md text-lg font-semibold shadow-md hover:bg-orange-700 transition duration-300 disabled:bg-slate-400" disabled={status?.type === 'info'}>
                  {status?.type === 'info' ? 'Enviando...' : 'Enviar Mensaje'}
                </button>
              </div>
              {status && (
                <p className={`text-center font-semibold mt-4 ${
                  status.type === 'success' ? 'text-green-600' :
                  status.type === 'error' ? 'text-red-600' : 'text-gray-600'
                }`}>
                  {status.message}
                </p>
              )}
            </form>
          </motion.div>
        </div>

        {/* --- SECCIÓN DE REDES SOCIALES (AÑADIDA) --- */}
        

      </div>
    </motion.section>
  );
};

export default ContactSection;